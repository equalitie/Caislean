- name: Install web server packages (from backports)
  apt:
    pkg: "{{ item }}"
    state: installed
    default_release: "{{ansible_distribution_release}}-backports"
  with_items:
    - nginx
  when: ansible_distribution_release == "wheezy"
  tags: webserver

- name: Install web server packages
  apt:
    pkg: "{{ item }}"
    state: installed
  with_items:
    - nginx
  when: ansible_distribution_release == "jessie"
  tags: webserver

- name: Create www group
  group:
    name: www
    state: present
  tags: webserver

- name: Create www user
  user:
    name: www
    group: www
    home: /var/www
    createhome: no
    shell: /bin/nologin
  tags: webserver

- name: Create nginx log directory
  file:
    path: "{{ item }}"
    state: directory
    group: www
    owner: www
    mode: 0750
    recurse: no
  with_items:
    - /var/log/nginx
  tags: webserver

- name: Create nginx runtime directory
  file:
    path: "{{ item }}"
    state: directory
    group: www
    owner: www
    mode: 0750
    recurse: no
  with_items:
    - /var/run/nginx
  when: ansible_distribution_release == "wheezy"
  tags: webserver

- name: Create nginx content directories
  file:
    path: "/var/www/{{ item.name }}"
    state: directory
    group: root
    owner: root
    mode: 0755
    recurse: no
  with_items:
    - { name: 'default' }
    - "{{ websites }}"
  tags: webserver

- name: Add placeholder index.html file to document roots
  template:
    src: index.html.j2
    dest: "/var/www/{{ item.name }}/index.html"
    group: www
    owner: www
    mode: 0644
    force: no
  with_items:
    - { name: 'default' }
    - "{{ websites }}"
  tags: webserver

- name: Create domain-specific directories in /etc/nginx/includes
  file:
    path: "/etc/nginx/includes/{{ item.name }}"
    state: directory
    owner: root
    group: root
    mode: 0755
    recurse: no
  with_items:
    - "{{ websites }}"
  tags: webserver

- name: Install nginx configuration
  template:
    src: "{{ ansible_distribution_release }}-nginx.conf.j2"
    dest: /etc/nginx/nginx.conf
  tags: webserver

- name: Disable old default nginx virtual server
  file:
    path: /etc/nginx/sites-enabled/default
    state: absent
  tags: webserver

- name: Install custom default nginx virtual server
  copy:
    src: etc/nginx/sites-available/000-default
    dest: /etc/nginx/sites-available/000-default
    owner: root
    group: root
    mode: 0644
  tags: webserver

- name: Enable custom default nginx virtual server
  file:
    src: /etc/nginx/sites-available/000-default
    path: /etc/nginx/sites-enabled/000-default
    state: link
  tags: webserver

- name: Install nginx virtual servers
  template:
    src: nginx-vhost.j2
    dest: "/etc/nginx/sites-available/{{ item.name }}"
    group: root
    owner: root
    mode: 0644
  with_items:
    - "{{ websites }}"
  tags: webserver

- name: Enable nginx virtual servers
  file:
    src: "/etc/nginx/sites-available/{{ item.name }}"
    path: "/etc/nginx/sites-enabled/{{ item.name }}"
    state: link
  with_items:
    - "{{ websites }}"
  tags: webserver

- name: Install domain-specific TLS files
  template: src=domain-tls.j2 dest=/etc/nginx/includes/{{item}}/tls-{{item}} owner=root group=root mode=0644
  with_items: "{{ tls_additional_domains|default([]) }}"
  tags:
    - webserver

- name: Install reverse proxy files
  template: src=reverse-proxy.j2 dest="/etc/nginx/includes/{{item.name}}/reverse-proxy" group=root owner=root mode=0644
  with_items:
    - "{{ websites }}"
  when: item.reverse_proxy is defined
  tags:
    - webserver
    - reverse-proxy

- name: Check whether the Let's Encrypt pre-hooks directory exists
  stat: path=/etc/letsencrypt/caislean-pre-hooks
  register: le_pre_hooks
  tags:
    - webserver
    - letsencrypt

- name: Check whether the Let's Encrypt post-hooks directory exists
  stat: path=/etc/letsencrypt/caislean-post-hooks
  register: le_post_hooks
  tags:
    - webserver
    - letsencrypt

- name: Install Let's Encrypt hooks to restart nginx on certificate change
  copy:
    src: etc/letsencrypt/caislean-{{item}}-hooks/500-nginx
    dest: /etc/letsencrypt/caislean-{{item}}-hooks/500-nginx
    owner: root
    group: root
    mode: 0755
  when: le_pre_hooks.stat.isdir and le_post_hooks.stat.isdir
  with_items: [ pre, post ]
  tags:
    - webserver
    - letsencrypt

- name: Force an nginx restart to pick up changes
  service:
    name: nginx
    state: restarted
  tags: webserver
