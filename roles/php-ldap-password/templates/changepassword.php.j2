<?php
 
/**
 *   LDAP PHP Change Password Webpage
 *   Adaptation of work by Matt Rude <http://mattrude.com>
 *   http://technology.mattrude.com/2010/11/ldap-php-change-password-webpage/
 *
 *
 *              GNU GENERAL PUBLIC LICENSE
 *                 Version 2, June 1991
 *
 * Copyright (C) 1989, 1991 Free Software Foundation, Inc.,
 * 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA
 * Everyone is permitted to copy and distribute verbatim copies
 * of this license document, but changing it is not allowed.
 */
 
$message = array();
$message_css = "";
 
function sanitizeLDAPinput ($input, $type) {
  $ret = $input;

  if ($type == "filter")
    $ret = str_replace(array('\\', '*', '(', ')'), array('\5c', '\2a', '\28', '\29'), $ret);
  if ($type == "dn")
    $ret = str_replace(array('\\', ',',  '=',  '+',  '<',  '>',  ';',  '"',  '#'),
                       array('\5c','\2c','\3d','\2b','\3c','\3e','\3b','\22','\23'),
                       $ret);

  for ($i = 0; $i < 16; $i++)
    $ret = str_replace (chr($i), '\\0' . dechex($i), $ret);

  for ($i = 16; $i < 32; $i++)
    $ret = str_replace (chr($i), '\\' . dechex($i), $ret);

  return $ret;
}

function passwordInputOK ($p1, $p2) {
  $ret = false;

  if ($p1 == $p2 && strlen($p1) >= 10 && preg_match("/[0-9]/",$p1) && preg_match("/[A-Z]/",$p1) && preg_match("/[a-z]/",$p1))
    $ret = true;

  return $ret;
}

function changePassword($user,$oldPassword,$newPassword,$newPasswordCnf){
  global $message;
  global $message_css;

  /*
   *
   * Change the following variables according to your needs:
   * - LDAP server IP host or IP address (IPv6 unsupported)
   * - DN in which to search for users (they must be directly under this DN, not
   *   in subtrees)
   * - attributes against which to test the inputted login
   *
   */
  $server = "{{ php_ldap_password_remote_server }}";
  $server_port = {{ php_ldap_password_remote_port }};
  $base_dn = "{{ php_ldap_password_base_dn }}";
  $bind_attribute = array ("{{ php_ldap_password_login_attributes | join('","') }}");

  if (!passwordInputOK($newPassword,$newPasswordCnf)) {
    $message[] = "Error: new passwords do not meet requirements";
    return false;
  }

  error_reporting(0);
  $con = ldap_connect($server, $server_port);
  ldap_set_option($con, LDAP_OPT_PROTOCOL_VERSION, 3);

  if (strlen($oldPassword) == 0) {
    $message[] = "Error: cannot authenticate without a password";
    return false;
  }
  if (!$con) {
    $message[] = "Error: connect failed";
    return false;
  }

  $bind_ret = false;
  $bind_dn = "";
  foreach ($bind_attribute as $bd_attr) {
    $bind_dn = "$bd_attr=".sanitizeLDAPinput($user,"dn").",$base_dn";
    $bind_ret = ldap_bind($con, $bind_dn, $oldPassword);
    if ($bind_ret)
      break;
  }

  if ($bind_ret == false) {
    $message[] = "Error: credentials invalid or could not connect to server";
    ldap_unbind($con);
    return false;
  }

  $user_search = ldap_read ($con, $bind_dn, "(objectclass=*)");
  $user_entry = ldap_first_entry ($con, $user_search);
  $user_attrs = ldap_get_attributes ($con, $user_entry);

  $pwsalt = openssl_random_pseudo_bytes (20);
  $rawDigest = sha1($newPassword . $pwsalt, TRUE);
  $encoded_newPassword = "{SSHA}" . base64_encode($rawDigest . $pwsalt);
  $entry_newpass = array ("userPassword" => $encoded_newPassword);

  if (ldap_modify($con,$bind_dn,$entry_newpass) === false){
    $error = ldap_error($con);
    $errno = ldap_errno($con);
    $message[] = "Your password cannot be changed, please contact the administrator.";
    $message[] = "$errno - $error";
    ldap_unbind ($con);
    return false;
  } else {
    $message[] = "Password changed for user: $user";
  }

  $message_css = "yes";
  ldap_unbind($con);
  return true;
}
 
?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>Password Change Page</title>
<style type="text/css">
body { font-family: Verdana,Arial,Courier New; font-size: 0.7em; }
th { text-align: right; padding: 0.8em; }
#container { text-align: center; width: 500px; margin: 5% auto; }
.msg_yes { margin: 0 auto; text-align: center; color: green; background: #D4EAD4; border: 1px solid green; border-radius: 10px; margin: 2px; }
.msg_no { margin: 0 auto; text-align: center; color: red; background: #FFF0F0; border: 1px solid red; border-radius: 10px; margin: 2px; }
</style>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
</head>
<body>
<div id="container">
<h2>Password Change Page</h2>
<p>Your new password must be 10 characters long or longer and have at least:<br/>
one capital letter, one lowercase letter, &amp; one number.<br/>
You must use a new password, your current password<br/>can not be the same as your new password.</p>
<?php
      if (isset($_POST["submitted"])) {
        changePassword($_POST['username'],$_POST['oldPassword'],$_POST['newPassword1'],$_POST['newPassword2']);
        global $message_css;
        if ($message_css == "yes") {
          ?><div class="msg_yes"><?php
         } else {
          ?><div class="msg_no"><?php
          $message[] = "Your password was not changed.";
        }
        foreach ( $message as $one ) { echo "<p>$one</p>"; }
      ?></div><?php
      } ?>
<form action="<?php print $_SERVER['PHP_SELF']; ?>" name="passwordChange" method="post">
<table style="width: 400px; margin: 0 auto;">
<tr><th>Login:</th><td><input name="username" type="text" size="20px" autocomplete="off" /></td></tr>
<tr><th>Current password:</th><td><input name="oldPassword" size="20px" type="password" /></td></tr>
<tr><th>New password:</th><td><input name="newPassword1" size="20px" type="password" /></td></tr>
<tr><th>New password (again):</th><td><input name="newPassword2" size="20px" type="password" /></td></tr>
<tr><td colspan="2" style="text-align: center;" >
<input name="submitted" type="submit" value="Change Password"/>
<button onclick="$('frm').action='<?php print $_SERVER['PHP_SELF']; ?>';$('frm').submit();">Cancel</button>
</td></tr>
</table>
</form>
</div>
</body>
</html>
